<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.wsdot.wa.gov/OpenBridgeML/Geometry"
           xmlns:bxg="http://www.wsdot.wa.gov/OpenBridgeML/Geometry"
           xmlns:bxu="http://www.wsdot.wa.gov/OpenBridgeML/Units">
  <xs:annotation>
    <xs:documentation>
      This schema defines the OpenBridgeML protocol for modeling basic geometry. Basic geometry consists of points, lines, and circles.
    </xs:documentation>
  </xs:annotation>

  <xs:import namespace="http://www.wsdot.wa.gov/OpenBridgeML/Units" schemaLocation="OpenBridgeML_Units.xsd" />
  
  <xs:complexType name="Point2DType">
    <xs:annotation>
      <xs:documentation>
        Defines a point in a planar space
      </xs:documentation>
    </xs:annotation>
      <xs:sequence>
        <xs:element name="X" type="bxu:LengthValueType"/>
        <xs:element name="Y" type="bxu:LengthValueType"/>
      </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="Point3DType">
    <xs:annotation>
      <xs:documentation>
        Defines a point in 3D space
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="bxg:Point2DType">
        <xs:sequence>
          <xs:element name="Z" type="bxu:LengthValueType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Point3D" type="bxg:Point3DType"/>

  <xs:complexType name="ShapeType">
    <xs:annotation>
      <xs:documentation>
        2D Shape
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Point" type="bxg:Point2DType" minOccurs="3" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Void" type="xs:boolean" use="optional"/>
  </xs:complexType>

  <xs:complexType name="SectionType">
    <xs:sequence>
      <xs:element name="Shape" type="bxg:ShapeType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SurfaceType">
    <xs:sequence>
      <xs:element name="Thickness" type="bxu:LengthValueType" minOccurs="0" maxOccurs="1"/>
      <xs:choice>
        <xs:element name="Shape" type="bxg:ShapeType" minOccurs="1" maxOccurs="unbounded"/>
        <xs:sequence>
          <xs:element name="Point" type="bxg:Point3DType" minOccurs="3" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ExtrusionType">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Shape" type="bxg:ShapeType"/>
        <xs:element name="Section" type="bxg:SectionType"/>
      </xs:choice>
      <xs:element name="Path" type="bxg:LineType"/>
      <!-- this should be a 3D curvalinear path in space -->
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VolumeType">
    <xs:sequence>
      <xs:element name="Surface" type="bxg:SurfaceType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Volume Types
  1) 2D surface with a thickness
  2) 2D surface extruded along a line
  3) Connected surfaces (prism)
  -->

  <xs:complexType name="PointRefType">
    <xs:annotation>
      <xs:documentation>
        
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="refId" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="LineType">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:sequence>
        <xs:element name="Point" type="bxg:Point2DType"/>
        <xs:element name="Direction" type="bxu:AngleValueType" />
      </xs:sequence>
      <xs:sequence>
        <xs:element name="PointRef" type="bxg:PointRefType"/>
        <xs:element name="Direction" type="bxu:AngleValueType" />
      </xs:sequence>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="CircleType">
    <xs:annotation>
      <xs:documentation>
        
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:sequence>
        <xs:element name="Center" type="bxg:Point2DType"/>
        <xs:element name="Radius" type="bxu:PositiveLengthValueType" />
      </xs:sequence>
      <xs:sequence>
        <xs:element name="CenterRef" type="bxg:PointRefType" />
        <xs:choice>
        <xs:element name="Radius" type="bxu:PositiveLengthValueType" />
        <xs:element name="POC" type="bxg:PointRefType" /> <!-- point on circumference -->
      </xs:choice>
    </xs:sequence>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" />
  </xs:complexType>


   <xs:simpleType name="AzimuthType">
      <xs:restriction base="xs:double"/>
      <!-- use reg expression to restrict the string -->
      <!-- the valid string for Azimuth and Skew are the same, they are just measured from different datum -->
   </xs:simpleType>
  
   <xs:simpleType name="SkewType">
      <xs:restriction base="xs:string"/>
      <!-- use reg expression to restrict the string -->
     <!-- valid forms
     [+|-]dd.dd                  45.0, -13.265
     [+|-]dd [mm [ss.ss]]       45 14,  -13 23 23.11
     dd.dd [L|R|l|r]             45.0 L, 34.23 R, 13.43 l, 13.32 r
     dd [mm [ss.ss]] [L|R|l|r]  34 L, 34 54 R, 12 32 34.43 l, 23 r
     -->
   </xs:simpleType>
  
   <xs:simpleType name="BearingType">
      <xs:restriction base="xs:string"/>
      <!-- use reg expression to restrict the string -->
     <!-- valid forms
     [N|S|n|s] dd.dd [E|W|e|w]
     [N|S|n|s] dd [mm [ss.ss]] [E|W|e|w]
     -->
   </xs:simpleType>

   <!--
   The intent of this is to ensure uniqueness in element id's if there is a <Geometry> section in the XML instance document
   <xs:element name="Geometry">
    <xs:unique name="uniquePointId">
      <xs:selector xpath="Point"/>
      <xs:field xpath="@id" />
    </xs:unique>

    <xs:unique name="uniqueLineId">
      <xs:selector xpath="Line"/>
      <xs:field xpath="@id" />
    </xs:unique>

    <xs:unique name="uniqueCircleId">
      <xs:selector xpath="Circle"/>
      <xs:field xpath="@id" />
    </xs:unique>

    <xs:keyref name="pointRef" refer="uniquePointId">
      <xs:selector xpath="Line/PointRef|Circle/CenterRef|Circle/POC"/>
      <xs:field xpath="@refId" />
    </xs:keyref>
  </xs:element>
  -->

</xs:schema>